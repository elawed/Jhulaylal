@model JhulayLal_Enterprise.Models.AspNetSale

@{
    ViewBag.Title = "Cash Received";
}

<script>
    $(document).ready(function () {
        $('#CustomerID').change(function ()
        {
             var id = $('#CustomerID').val();
             $.get('@Url.Action("GetCustomerRemainings","AspNetSales")',
                 { Id: id }, function (Remaining) {
                     $('#Remaining').val(parseInt(Remaining));
                     $('#hiddenRemaining').val(parseInt(Remaining));
            });
        })
        $('#Received').keyup(function () {
            var Remaining = parseInt($('#hiddenRemaining').val());
            var Received = parseInt($('#Received').val());
            console.log(Remaining + "  " + Received);
            if (!isNaN(Received))
            {
                $('#Remaining').val(Remaining - Received);
            }
           
        });
    });
</script>
<div class="box box-primary">
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="box-header with-border">
        <h3>Cash Received</h3>
    </div>
    <div class="box-body">
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.CustomerID, "CustomerID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("CustomerID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CustomerID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Particular, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Particular, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Particular, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Received, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Received, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Received, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Remaining, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Remaining, new { htmlAttributes = new { @class = "form-control" } })
                    <div hidden>
                        @Html.EditorFor(model => model.Remaining, new { htmlAttributes = new { @class = "form-control", @id = "hiddenRemaining" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.Remaining, "", new { @class = "text-danger" })
                </div>
            </div>

           
        </div>
    </div>
    <div class="box-footer">
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Add Cash" class="btn btn-primary" />
            </div>
        </div>
    </div>
}
</div>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
